const {Telegraf, Markup, Extra} = require('telegraf')

const bot = new Telegraf('6344467212:AAEbIpqY7I0nJd4HVJlJk37gzwWNe632FTw')

//–Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–±–æ—Ä–æ–≤ —Å–ª–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞
const greetings = [
	'–ø—Ä–∏–≤–µ—Ç',
	'–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π',
	'–¥–æ–±—Ä—ã–π –¥–µ–Ω—å',
	'–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ',
	'–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä',
	'–±–æ–Ω–∂—É—Ä',
	'–ø–æ–±–æ–ª—Ç–∞–µ–º',
]
const perfect = [
	'–æ—Ç–ª–∏—á–Ω',
	'–∑–¥–æ—Ä–æ–≤–æ',
	'–≤–æ—Å—Ö–∏',
	'–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω',
	'–ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω',
	'–º–æ–ª–æ–¥–µ—Ü',
	'—á—ë—Ç–∫–æ',
	'—á—ë—Ç–µ–Ω—å–∫–æ',
	'–ø—Ä–µ–∫—Ä–∞—Å–Ω',
	'–∏–¥–µ–∞–ª—å–Ω',
	'–±–æ–º–±–µ–∑–Ω',
	'—Ö–∞—Ä–æ—à',
	'–±–æ–º–±',
	'—Å—É–ø–µ—Ä',
	'–æ–≥–æ–Ω—å',
	'—É—Ä–∞',
	'üòé',
	'üí•',
	'üî•',
	'üëç',
]
const joy = [
	'–ø—Ä–∏—è—Ç–Ω',
	'—Ö–æ—Ä–æ—à',
	'–º–∏–ª',
	'–∑–¥–æ—Ä–æ–≤–æ',
	'–∫—Ä–∞—Å–∏–≤–æ',
	'–∫—Ä–∞—Å–æ—Ç–∞',
	'–Ω—Ä–∞–≤–∏—Ç—Å—è',
	'–Ω—Ä–∞–≤–∏–ª',
	'–ø—Ä–∏–≤–µ—Ç–ª–∏–≤',
	'–ª–∞—Å–∫',
	'—É—é—Ç',
	'ü•∞',
	'üòä',
]
const laughter = ['—Ö–∞—Ö–∞', '–∞—Ö–∞—Ö', '—Ö–∞-—Ö–∞', '–æ—Ä—É', 'üòÄ', 'üòÉ', 'üòÑ', 'üòÅ', 'üòÜ', 'üòÇ']
const like = [
	'–ª—é–±',
	'—á–º–æ–∫',
	'–æ–±–Ω–∏–º–∏',
	'–æ–±–Ω–∏–º–∞—à–∫–∏',
	'–æ–±–Ω—è—Ç—å',
	'–æ–±–Ω–∏–º–∞—é',
	'‚ù§Ô∏è',
	'üß°',
	'üíõ',
	'üíö',
	'üíô',
	'üíú',
	'üñ§',
	'ü§ç',
	'ü§é',
	'üíï',
	'üíñ',
	'üíó',
	'üòç',
	'üòò',
	'üòö',
	'üòô',
]
const sadness = [
	'—ç—Ö',
	'–≥—Ä—É—Å—Ç',
	'–ø–ª–∞—á',
	'—É–Ω—ã–ª',
	'—Ç–æ—Å–∫–ª–∏–≤–æ',
	'–º—Ä–∞–∫',
	'–º—Ä–∞—á–Ω–æ',
	'—Ç–∞–∫ –ø–ª–æ—Ö–æ',
	'–º–Ω–µ –ø–ª–æ—Ö–æ',
	'–ø–ª–æ—Ö–æ',
	'–±–æ–ª—å',
	'—Ç–ª–µ–Ω',
	'–∞–ø–∞—Ç–∏—è',
	'–æ–±–∏–¥',
	'—Å–∫—É—á',
	'üò¢',
	'üò≠',
	'üò©',
	'ü•∫',
]
const anger = ['—Ä–∞–∑–¥—Ä–∞–∂–∞', ' –∑–æ–ª', '–∑–ª–∏—Ç', '–∑–ª—è—Ç', '–±–µ—Å–∏—Ç', 'ü§¨', 'üò°', 'üò†', 'üò§']

//–º–∞—Å—Å–∏–≤—ã —Å –ø–æ–¥–±–æ—Ä–∫–∞–º–∏ —Å—Ç–∏–∫–µ—Ä–æ–≤ –ø–æ —ç–º–æ—Ü–∏—è–º
const perfectStickers = [
	'CAACAgIAAxkBAAEJsB9ksSMYMp1Emny0Ewe_buJ8OEkkPwACexgAAqKNEUlFWrcoDeS17C8E',
	'CAACAgIAAxkBAAEJsCFksSM6knKoEptfBZw7l2u-E1PxzQACTgADrWW8FCFszl8rK9s8LwQ',
	'CAACAgIAAxkBAAEJsChksSNOV7MvW9tXxMxJYVVynvfKlwACZAAD5KDOBxCJHt_6mvpoLwQ',
	'CAACAgIAAxkBAAEJsCpksSNb3t6bhuB9p8lhULeRm_BVtQACXgUAAj-VzAqq1ncTLO-MOS8E',
	'CAACAgIAAxkBAAEJsC5ksSN2BsD1UrTmWGqUQpIWtedKNQACSwEAAjDUnREBhYZ3NsTI6S8E',
	'CAACAgIAAxkBAAEJsDlksSQgb_X0cmEoVwm87GIZINIW3AACTAEAAjDUnRH33m9fN4M5HC8E',
	'CAACAgIAAxkBAAEJsDtksSQype-4VRfkfRk_0HbD0QndowACWAAD5KDOB6zQ7H5i9f3_LwQ',
]
const joyStickers = [
	'CAACAgIAAxkBAAEJsEVksSYouRT6NQ0C7Tk8eriVaEv0DwACWhIAAu4_4Us2E8GNf5X65C8E',
	'CAACAgIAAxkBAAEJsENksSX4uQxkta8FKd5qNbDTl0iQPAACXAUAAj-VzApdMiyGI-YRhi8E',
	'CAACAgIAAxkBAAEJsEFksSXqQEqOAtDrC5poyx7AMLbTMgACbxcAApuNSUggQ6VeD0Xh7y8E',
	'CAACAgIAAxkBAAEJsGFksShc0D_dmi7ecJy5hecge88ZFQACYAUAAj-VzApGyHYEZMxRFS8E',
]
const laughterStickers = [
	'CAACAgIAAxkBAAEJsNZksU15D1LJMlm8Jz1XlJpqIX_nGQACIQADwZxgDKk0EkqSiHn8LwQ',
	'CAACAgIAAxkBAAEJsNRksU0GL4dj3Ejx6nQHiFgWOM068wACdgUAAj-VzApFV7w2VozN3S8E',
	'CAACAgIAAxkBAAEJsNhksU2LYqqGawEjykEJe-F20vKp-QACOwADJHFiGrVW4rs5mEP-LwQ',
	'CAACAgIAAxkBAAEJsNpksU2RaeKiwqxF9nOEze9lUo_zLgACUhIAAiB-4UuMMhMZPwqytC8E',
	'CAACAgIAAxkBAAEJsNxksU2nNQ0T1aLLpFbFzVIAAf-xLOYAAiwBAAIiN44EgbFfWRTJ52IvBA',
	'CAACAgIAAxkBAAEJsN5ksU22OgoLjIs5zvCR9llVIoE4ngAChgEAAiteUwvsveiyLrmANi8E',
]
const likeStickers = [
	'CAACAgIAAxkBAAEJsGFksShc0D_dmi7ecJy5hecge88ZFQACYAUAAj-VzApGyHYEZMxRFS8E',
	'CAACAgIAAxkBAAEJsGVksSlFMrFQHcj5stJLTvacIV_MdgACPQADJHFiGmptpaX1U366LwQ',
	'CAACAgIAAxkBAAEJsGhksSlLv1g_vou0mYXeONA3XZGEXgACWgUAAj-VzAobFrmFvSDDnS8E',
	'CAACAgIAAxkBAAEJsG9ksSmi0J4_k8tmnikXBVrs-toQOQACcAUAAj-VzArvDuYB7z8ley8E',
	'CAACAgIAAxkBAAEJsHFksSmmluRFdQ2GeaPLEY_kRdDmLgAChBwAApom4UtpTBJ3IoaoLi8E',
	'CAACAgIAAxkBAAEJsHNksSnIJVWQdzJYLDlE2LJuksWBxQACqxEAAsrwUEhJu-d0MQd_Di8E',
	'CAACAgIAAxkBAAEJsHVksSoLHeZwcH3moMtZfl4itjCrOgACWhIAAu4_4Us2E8GNf5X65C8E',
	'CAACAgIAAxkBAAEJsHdksSolf2iyzeMY-spUpPc02cuC7AACXwAD5KDOB8EFQldaO3BILwQ',
]
const sadnessStickers = [
	'CAACAgIAAxkBAAEJsJNksTRpdp6rTuTOnbhstJWkXEEvHwACPQEAAjDUnREQ98oHcZKP7i8E',
	'CAACAgIAAxkBAAEJsJVksTSZ1ZVmexFxEp5NsJ0CGb6jlAACPwEAAjDUnRH7bEz1RowY1C8E',
	'CAACAgIAAxkBAAEJsJdksTTi8wczj7fhnQgtEqNtkxSi0QACeAUAAj-VzAqq_QjcS2pGOi8E',
	'CAACAgIAAxkBAAEJsJlksTUKMUIP4ND-AAHUAAFb_JtxfOyDAAJiBQACP5XMCkCIeReG4EyMLwQ',
	'CAACAgIAAxkBAAEJsJtksTUUBCukTSB5r39Ah1jvmaE3vQACLBcAAh10SUgSG1rRyFFIuS8E',
	'CAACAgIAAxkBAAEJsJ9ksTUzPtHrcdJJze9fdC-TnhUj9gACJQADwZxgDLGbFNkrHorWLwQ',
	'CAACAgIAAxkBAAEJsKFksTVDazQZE2ObIY-pop0RTuD0DwACQQEAAiI3jgQ6ZYRAXOp8SS8E',
	'CAACAgIAAxkBAAEJsKNksTVcyk97kRFGhWZblCCQx858HQACLBcAAh10SUgSG1rRyFFIuS8E',
]
const angerStickers = [
	'CAACAgIAAxkBAAEJsKVksTcz5JhMnB3pN5LL5MANYYkSqgAChhcAAgwxEUmmqvqisa9ZGy8E',
	'CAACAgIAAxkBAAEJsKdksTc9qO6Ck9x_b7OVAVyxHxoyFwACWwUAAj-VzApBOR5dFEl0zi8E',
	'CAACAgIAAxkBAAEJsKtksTd-zIMDwN1PUD820DaGn6Ed4wACXQUAAj-VzAqkBNzb9zv7Ki8E',
	'CAACAgIAAxkBAAEJsK1ksTeZR5Fudpzz6vjsmSiho3hpfgACZwUAAj-VzAoofuUG7r451C8E',
]

function includesSubstringInArray(message) {
	return function includesSubstring(array) {
		return array.some((substring) => message.toLowerCase().includes(substring))
	}
}

function getRandomInt(length) {
	return Math.floor(Math.random() * length)
}

function selectElement(array) {
	return array[getRandomInt(array.length)]
}

function selectRandomStickerfromAllGroups(...stickers) {
	const selectedArray = selectElement(stickers)
	return selectElement(selectedArray)
}

async function callMenuInMessage(ctx) {
	return await ctx.reply(
		'–ú–µ–Ω—é—à–∫–∞',
		Extra.markup(
			Markup.inlineKeyboard([
				[
					Markup.callbackButton('–û–±–Ω—è—Ç—å', 'hug'),
					Markup.callbackButton('–ü–æ–∂–µ–ª–∞—Ç—å —É–¥–∞—á–∏', 'goodLuck'),
				],
				[
					Markup.callbackButton('–ú–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ', 'sad'),
					Markup.callbackButton('–ü–æ–ª—É—á–∏–ª–æ—Å—å', 'managed'),
				],
				[Markup.callbackButton('–û–±–º–µ–Ω —Å—Ç–∏–∫–µ—Ä–∞–º–∏', 'stickers')],
				[Markup.callbackButton('–ü–æ–≥–æ–≤–æ—Ä–∏–º?', 'talk')],
			])
		)
	)
}

async function whatICan(ctx) {
	await ctx.reply(`–Ø –±—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–∫–µ—Ä–∞–º–∏,
	–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è.\n
	–¢–∞–∫–∂–µ —É –º–µ–Ω—è –µ—Å—Ç—å –ø–∞—Ä–æ—á–∫–∞ –∫–æ–º–∞–Ω–¥.\n
	–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–µ–Ω—é –º–æ–∂–Ω–æ –≤ —Å–∞–º–æ–º –Ω–∏–∑—É 
	(–∏–ª–∏ –∫–æ–º–∞–Ω–¥–æ–π '/menu')`)
	await ctx.replyWithPhoto({
		source: './pictures/–ø—Ä–∏–º–µ—Ä –ø–µ—Ä–µ–ø–∏—Å–∫–∏.png',
	})
	await ctx.reply(
		'–ö–æ–Ω–æ–ø–∫–∞ –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–∞–º–æ–º –Ω–∏–∑—É',
		Extra.markup(Markup.keyboard([[Markup.callbackButton('–ú–µ–Ω—é', 'menu')]]))
	)
	await ctx.reply(
		'–†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É',
		Extra.markup(Markup.inlineKeyboard([[Markup.callbackButton('–ü–æ–≥–æ–≤–æ—Ä–∏–º?', 'talk')]]))
	)
}

//–≤—Å–µ –∫–æ–º–∞–Ω–¥—ã

bot.command('menu', (ctx) => {
	callMenuInMessage(ctx)
})

//–∫–Ω–æ–ø–æ—á–∫–∏
bot.start(async (ctx) => {
	await ctx.replyWithSticker(
		'CAACAgIAAxkBAAEJsxFksrjdDc8s-wAB-xgk4BUaHJ7-Y8gAAu8UAAI7IkhIDtGHPT9DmfwvBA'
	)
	await ctx.reply(
		`–ü—Ä–∏–≤–µ—Ç)\n–Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –¥–ª—è —Ç–µ–±—è —Å–∞–º—ã–º –ª—É—á—à–∏–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º`,
		Extra.markup(Markup.inlineKeyboard([[Markup.callbackButton('–ß—Ç–æ —è –º–æ–≥—É', 'whatICan')]]))
	)
})

bot.action('whatICan', (ctx) => whatICan(ctx))

bot.action('talk', async (ctx) => {
	await ctx.reply('–°–ª—É—à–∞—é —Ç–µ–±—è)')
})

bot.action('hug', async (ctx) => {
	await ctx.reply('–ò–¥–∏ —Å—é–¥–∞...')
	await ctx.replyWithSticker(selectElement(joyStickers))
})

bot.action('goodLuck', async (ctx) => {
	await ctx.reply('–£–¥–∞—á–∏!!!')
	await ctx.replyWithSticker(
		'CAACAgIAAxkBAAEJsxNksrlHNIcZ20Dt0wkTp-aP-20IMgACWhIAAu4_4Us2E8GNf5X65C8E'
	)
})

bot.action('sad', async (ctx) => {
	await ctx.reply('–û—Ç—Å—Ç–∞–≤–∏—Ç—å —Å–ª—ë–∑—ã!')
	await ctx.replyWithSticker(selectElement(joyStickers))
	await ctx.reply('–ß—Ç–æ –∏—Å–ø–æ—Ä—Ç–∏–ª–æ —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?')
	await ctx.reply('–ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –æ–± —ç—Ç–æ–º –≥–æ–≤–æ—Ä–∏—Ç—å, —Ç–æ ')
	await ctx.replyWithSticker(selectElement(likeStickers))
})

bot.action('managed', async (ctx) => {
	await ctx.replyWithSticker(selectElement(perfectStickers))
})

bot.action('stickers', (ctx) => {
	const stickerForSendingId = selectRandomStickerfromAllGroups(
		perfectStickers,
		joyStickers,
		sadnessStickers,
		laughterStickers,
		likeStickers
	)
	ctx.replyWithSticker(stickerForSendingId)
})

bot.on('sticker', async (ctx) => {
	const stickerForSendingId = selectRandomStickerfromAllGroups(
		perfectStickers,
		joyStickers,
		sadnessStickers,
		laughterStickers,
		likeStickers
	)
	ctx.replyWithSticker(stickerForSendingId)
})

//–±–ª–æ–∫, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx) => {
	console.log(ctx.message.text.toLowerCase())
	const msg = ctx.message.text
	const includesWord = includesSubstringInArray(msg)
	let understandingCounter = 0

	if (ctx.message.text.toLowerCase() === '–º–µ–Ω—é' || ctx.message.text === 'menu') {
		return callMenuInMessage(ctx)
	}

	if (includesWord(greetings)) {
		await ctx.reply('–ü—Ä–∏–≤–µ—Ç!\n–ö–∞–∫ —Ç—ã?\n–†–∞–¥ —Ç–µ–±—è —Å–ª—ã—à–∞—Ç—å)')
		understandingCounter += 1
	}
	if (includesWord(perfect)) {
		await ctx.replyWithSticker(selectElement(perfectStickers))
		understandingCounter += 1
	}
	if (includesWord(joy)) {
		await ctx.replyWithSticker(selectElement(joyStickers))
		understandingCounter += 1
	}
	if (includesWord(laughter)) {
		await ctx.replyWithSticker(selectElement(laughterStickers))
		understandingCounter += 1
	}
	if (includesWord(like)) {
		await ctx.replyWithSticker(selectElement(likeStickers))
		understandingCounter += 1
	}
	if (includesWord(sadness)) {
		await ctx.replyWithSticker(selectElement(sadnessStickers))
		understandingCounter += 1
	}
	if (includesWord(anger)) {
		await ctx.replyWithSticker(selectElement(angerStickers))
		understandingCounter += 1
	}
	console.log(understandingCounter)
	if (understandingCounter === 0) {
		await ctx.reply(
			'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ —Å–º–æ–≥ —Ç–µ–±—è –ø–æ–Ω—è—Ç—å, —Ç–∞–∫ –∫–∞–∫ –º–æ–≥ –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞/—Å—Ç–∏–∫–µ—Ä—ã/emoji'
		)
		await ctx.replyWithSticker(selectElement(sadnessStickers))
	}
})

bot.launch()

process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))
